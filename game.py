# game.py (–í–ï–†–°–Ü–Ø 5.0 - –§–Ü–ù–ê–õ–¨–ù–ò–ô –Ü–ù–¢–ï–†–§–ï–ô–°)

import streamlit as st
import time
import base64
import os

def get_image_as_base64(file_path):
    try:
        with open(file_path, "rb") as f:
            data = f.read()
        return base64.b64encode(data).decode()
    except FileNotFoundError:
        return None

# --- –ù–ê–õ–ê–®–¢–£–í–ê–ù–ù–Ø –°–¢–û–†–Ü–ù–ö–ò ---
st.set_page_config(
    page_title="Cesta Python M√°ga",
    page_icon="üßô‚Äç‚ôÇÔ∏è",
    layout="wide"
)

# --- –§–Ü–ù–ê–õ–¨–ù–ò–ô –ë–õ–û–ö –°–¢–ò–õ–Ü–í ---
image_file = "static/background.png"  # –ü–µ—Ä–µ–≤—ñ—Ä, —á–∏ —Ç—É—Ç –ø—Ä–∞–≤–∏–ª—å–Ω–µ —Ä–æ–∑—à–∏—Ä–µ–Ω–Ω—è (.jpg –∞–±–æ .png)

if os.path.exists(image_file):
    image_base64 = get_image_as_base64(image_file)
    
    # –í–∏–∫–æ—Ä–∏—Å—Ç–æ–≤—É—î–º–æ –±—ñ–ª—å—à –Ω–∞–¥—ñ–π–Ω–∏–π —Å–µ–ª–µ–∫—Ç–æ—Ä `.stApp`
    page_bg_img = f"""
    <style>
    .stApp {{
        background-image: url("data:image/jpg;base64,{image_base64}");
        background-size: cover;
        background-position: center;
        background-repeat: no-repeat;
        background-attachment: fixed;
    }}

    /* –†–æ–±–∏–º–æ —Ç–µ–∫—Å—Ç –±—ñ–ª–∏–º —Ç–∞ –¥–æ–¥–∞—î–º–æ —Ç—ñ–Ω—å –¥–ª—è –∫—Ä–∞—â–æ—ó —á–∏—Ç–∞–±–µ–ª—å–Ω–æ—Å—Ç—ñ */
    .stApp .stMarkdown, 
    .stApp .stHeader, 
    .stApp .stTitle,
    .stApp .st-emotion-cache-1gulkj5 {{ /* –¶–µ –¥–ª—è —Ç–µ–∫—Å—Ç—É –≤ –ø–æ–ª—è—Ö –≤–≤–æ–¥—É */
        color: #FFFFFF;
        text-shadow: 1px 1px 3px #000000;
    }}

    /* –ù–∞–ø—ñ–≤–ø—Ä–æ–∑–æ—Ä–∏–π —Ñ–æ–Ω –¥–ª—è —ñ–Ω—Ç–µ—Ä–∞–∫—Ç–∏–≤–Ω–∏—Ö –µ–ª–µ–º–µ–Ω—Ç—ñ–≤ */
    .stTextInput, .stTextArea, .stButton {{
        background-color: rgba(20, 20, 40, 0.7);
        border-radius: 10px;
        padding: 10px;
        border: none;
    }}

    .stTextInput > div > div > input,
    .stTextArea > div > div > textarea {{
        background-color: rgba(255, 255, 255, 0.1);
        color: #FFFFFF;
        border: 2px solid #9370DB;
        border-radius: 5px;
    }}

    .stButton > button {{
        background-color: #9370DB;
        color: white;
        border-radius: 10px;
        border: 2px solid #4B0082;
        width: 100%; /* –†–æ–∑—Ç—è–≥—É—î–º–æ –∫–Ω–æ–ø–∫—É –Ω–∞ –≤—Å—é —à–∏—Ä–∏–Ω—É –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–∞ */
    }}
    .stButton > button:hover {{
        background-color: #4B0082;
        border-color: #9370DB;
    }}
    
    /* –ü—Ä–∏–±–∏—Ä–∞—î–º–æ –¥—ñ–∞–≥–Ω–æ—Å—Ç–∏—á–Ω–µ –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è –ø—ñ—Å–ª—è —Ç–æ–≥–æ, —è–∫ –ø–µ—Ä–µ–∫–æ–Ω–∞–ª–∏—Å—è, —â–æ –≤—Å–µ –ø—Ä–∞—Ü—é—î */
    /* –Ø–∫—â–æ —Ñ–æ–Ω –∑–Ω–æ–≤—É –Ω–µ –∑'—è–≤–∏—Ç—å—Å—è, –∑–∞–∫–æ–º–µ–Ω—Ç—É–π —Ü–µ–π –±–ª–æ–∫, —â–æ–± –ø–æ–±–∞—á–∏—Ç–∏ –ø–æ–º–∏–ª–∫—É */
    [data-testid="stSidebar"] [data-testid="stAlert"] {{
        display: none;
    }}
    </style>
    """
    st.markdown(page_bg_img, unsafe_allow_html=True)
else:
    # –ü–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑–∞–ª–∏—à–∞—î—Ç—å—Å—è –Ω–∞ –≤–∏–ø–∞–¥–æ–∫, —è–∫—â–æ —Ñ–∞–π–ª –∑–Ω–∏–∫–Ω–µ
    st.sidebar.error(f"‚ùå –ü–û–ú–ò–õ–ö–ê: –§–∞–π–ª —Ñ–æ–Ω—É –Ω–µ –∑–Ω–∞–π–¥–µ–Ω–æ –∑–∞ —à–ª—è—Ö–æ–º '{image_file}'.")


# --- –†–ï–®–¢–ê –ö–û–î–£ –ì–†–ò –ó–ê–õ–ò–®–ê–Ñ–¢–¨–°–Ø –ë–ï–ó –ó–ú–Ü–ù ---

# --- –Ü–ù–Ü–¶–Ü–ê–õ–Ü–ó–ê–¶–Ü–Ø –°–¢–ê–ù–£ –ì–†–ò ---
if 'level' not in st.session_state:
    st.session_state.level = 0
if 'score' not in st.session_state:
    st.session_state.score = 0
if 'player_name' not in st.session_state:
    st.session_state.player_name = ""


# --- –§–£–ù–ö–¶–Ü–á –î–õ–Ø –†–Ü–í–ù–Ü–í ---
def display_level_0():
    st.title("üßô‚Äç‚ôÇÔ∏è V√≠tej na Cestƒõ Python M√°ga! üìú")
    st.image("static/wizard.png", width=200)
    st.markdown("### Tv√° zkou≈°ka zaƒç√≠n√°, mlad√Ω uƒçedn√≠ku!")
    st.markdown("Jsi v prastar√© Akademii K√≥du...")
    player_name = st.text_input("Jak ti m√°me ≈ô√≠kat, budouc√≠ m√°gu?", key="player_name_input", value=st.session_state.get("player_name", ""))
    if st.button("Zaƒç√≠t dobrodru≈æstv√≠!"):
        if player_name:
            st.session_state.player_name = player_name
            st.session_state.level = 1
            st.rerun()
        else:
            st.warning("Mus√≠≈° zadat sv√© jm√©no...")

def display_level_1():
    st.header("√örove≈à 1: Komnata ozvƒõn üó£Ô∏è")
    st.markdown("Prvn√≠ komnata testuje tvou schopnost **p≈ôedstavit se**...")
    st.info("üí° **Tip:** Jm√©na (≈ôetƒõzce) se v Pythonu p√≠≈°√≠ do uvozovek...")
    user_code = st.text_area("Napi≈° sv√© kouzlo zde:", height=100, key="level1_code")
    if st.button("Seslat kouzlo ‚ú®"):
        correct_part1 = f"jmeno=\"{st.session_state.player_name}\""
        correct_part2 = "print(jmeno)"
        if correct_part1.replace(" ", "") in user_code.replace(" ", "") and correct_part2.replace(" ", "") in user_code.replace(" ", ""):
            st.success(f"V√Ωbornƒõ, {st.session_state.player_name}! Dve≈ôe se otev√≠raj√≠!")
            st.balloons()
            st.session_state.score += 10
            st.session_state.level = 2
            time.sleep(2)
            st.rerun()
        else:
            st.error("Str√°≈æce ti nerozum√≠...")

def display_level_2():
    st.header("√örove≈à 2: S√≠≈à ƒç√≠seln√Ωch lektvar≈Ø üß™")
    st.markdown("K odemƒçen√≠ dal≈°√≠ch dve≈ô√≠ mus√≠≈° nam√≠chat **lektvar s√≠ly**...")
    st.info("üí° **Tip:** Python pou≈æ√≠v√° `+`, `-`, `*`...")
    user_code = st.text_area("Napi≈° sv√© kouzlo zde:", height=100, key="level2_code")
    if st.button("Nam√≠chat lektvar üß™"):
        if "vysledek" in user_code and "5" in user_code and "3" in user_code and "*" in user_code and "+" in user_code:
            try:
                loc = {}
                exec(user_code, {}, loc)
                if loc.get('vysledek') == 24:
                    st.success("C√≠t√≠≈°, jak ti v ≈æil√°ch proud√≠ s√≠la!...")
                    st.balloons()
                    st.session_state.score += 20
                    st.session_state.level = 3
                    time.sleep(2)
                    st.rerun()
                else:
                    st.error("Lektvar m√° divnou barvu...")
            except Exception as e:
                st.error(f"Kouzlo selhalo s chybou: {e}...")
        else:
            st.error("Zd√° se, ≈æe ti chyb√≠ nƒõjak√° ingredience...")

def display_level_3():
    st.header("√örove≈à 3: Knihovna rozhodnut√≠ üìö")
    st.markdown("P≈ôed tebou stoj√≠ mluv√≠c√≠ socha...")
    st.info("üí° **Tip:** Zde je p≈ô√≠klad, jak funguje podm√≠nka `if/else`...")
    st.code("vek = 20\nif vek >= 18:\n    print('Vstup povolen')\nelse:\n    print('Vstup odep≈ôen')", language='python')
    user_code = st.text_area("Napi≈° sv√© rozhodovac√≠ kouzlo:", height=150, key="level3_code")
    if st.button("Vyslovit slovo üó£Ô∏è"):
        normalized_code = user_code.replace(" ", "")
        if "volba='svƒõtlo'" in normalized_code and "ifvolba=='svƒõtlo':" in normalized_code and "else:" in normalized_code and "print(" in normalized_code:
            st.success("Spr√°vn√° volba! Socha ustupuje...")
            st.balloons()
            st.session_state.score += 30
            st.session_state.level = 4
            time.sleep(2)
            st.rerun()
        else:
            st.error("Socha nereaguje...")

def display_level_4():
    st.header("√örove≈à 4: Zahrada opakov√°n√≠ üå≥")
    st.markdown("K p≈ô√≠pravƒõ dal≈°√≠ho kouzla pot≈ôebuje≈° sesb√≠rat t≈ôi ingredience...")
    st.info("üí° **Tip:** Cyklus `for` opakuje k√≥d pro ka≈æd√Ω prvek v seznamu...")
    user_code = st.text_area("Napi≈° sv√© sbƒõrac√≠ kouzlo:", height=200, key="level4_code")
    if st.button("Zaƒç√≠t sb√≠rat üåø"):
        is_correct = "for" in user_code and "in ingredience" in user_code and "print" in user_code and "ko≈ôen mandragory" in user_code and "had√≠ k≈Ø≈æe" in user_code and "draƒç√≠ ≈°upina" in user_code
        if is_correct:
            st.success("V≈°echny ingredience jsou v tv√©m v√°ƒçku!...")
            st.balloons()
            st.session_state.score += 40
            st.session_state.level = 5
            time.sleep(2)
            st.rerun()
        else:
            st.error("Nƒõco ti chyb√≠...")

def display_level_5():
    st.header("√örove≈à 5: Svatynƒõ mistr≈Ø üèõÔ∏è")
    st.markdown("Jsi u posledn√≠ch dve≈ô√≠...")
    st.info("üí° **Tip:** Funkce se definuje pomoc√≠ `def nazev_funkce(argument):`...")
    user_code = st.text_area("Napi≈° sv√© mistrovsk√© kouzlo:", height=250, key="level5_code")
    if st.button("Vyslovit mistrovsk√© zakl√≠nadlo ü™Ñ"):
        normalized_code = user_code.replace(" ", "")
        is_defined = "defotevri_dvere(heslo):" in normalized_code
        has_return = "return" in normalized_code
        has_if = "ifheslo==" in normalized_code
        is_called = "otevri_dvere(" in normalized_code
        if is_defined and has_return and has_if and is_called:
            st.success("Sly≈°√≠≈° sk≈ô√≠pƒõn√≠ kamene...")
            st.balloons()
            st.session_state.score += 50
            st.session_state.level = 6
            time.sleep(2)
            st.rerun()
        else:
            st.error("Peƒçe≈• je p≈ô√≠li≈° siln√°...")

def display_final_screen():
    st.title(f"üéâ Gratuluji, M√°gule {st.session_state.player_name}! üéâ")
    st.balloons()
    st.markdown(f"## Dos√°hl jsi celkov√©ho sk√≥re: **{st.session_state.score} bod≈Ø!**")
    st.markdown("Pro≈°el jsi v≈°emi zkou≈°kami...")
    st.image("static/wizard.png", width=300, caption="Mistr M√°g Pythonu")
    if st.button("Hr√°t znovu?"):
        # –°–∫–∏–¥–∞—î–º–æ –ª–∏—à–µ —Ä—ñ–≤–µ–Ω—å —ñ —Ä–∞—Ö—É–Ω–æ–∫, —ñ–º'—è –∑–∞–ª–∏—à–∞—î–º–æ
        current_name = st.session_state.player_name
        st.session_state.clear() # –ü–æ–≤–Ω–µ –æ—á–∏—â–µ–Ω–Ω—è
        st.session_state.player_name = current_name # –í—ñ–¥–Ω–æ–≤–ª—é—î–º–æ —ñ–º'—è
        st.session_state.level = 0
        st.session_state.score = 0
        st.rerun()


# --- –ì–û–õ–û–í–ù–ê –õ–û–ì–Ü–ö–ê –ì–†–ò ---
st.sidebar.title("üêç Panel M√°ga")
if st.session_state.player_name:
    st.sidebar.write(f"**Uƒçedn√≠k:** {st.session_state.player_name}")
    st.sidebar.write(f"**√örove≈à:** {st.session_state.level if st.session_state.level <= 5 else 5} / 5")
    st.sidebar.write(f"**Sk√≥re:** {st.session_state.score} bod≈Ø")
    st.sidebar.progress(st.session_state.level / 5 if st.session_state.level <= 5 else 1.0)
else:
    st.sidebar.write("ƒåek√°m na nov√©ho uƒçedn√≠ka...")

# –†–æ—É—Ç–µ—Ä, —è–∫–∏–π –≤—ñ–¥–æ–±—Ä–∞–∂–∞—î –ø—Ä–∞–≤–∏–ª—å–Ω–∏–π —Ä—ñ–≤–µ–Ω—å –≤ –∑–∞–ª–µ–∂–Ω–æ—Å—Ç—ñ –≤—ñ–¥ —Å—Ç–∞–Ω—É –≥—Ä–∏
if st.session_state.level == 0:
    display_level_0()
elif st.session_state.level == 1:
    display_level_1()
elif st.session_state.level == 2:
    display_level_2()
elif st.session_state.level == 3:
    display_level_3()
elif st.session_state.level == 4:
    display_level_4()
elif st.session_state.level == 5:
    display_level_5()
elif st.session_state.level == 6:
    display_final_screen()
