# game.py (–§–Ü–ù–ê–õ–¨–ù–ê –í–ï–†–°–Ü–Ø 3.0)

import streamlit as st
import time

# --- –ù–ê–õ–ê–®–¢–£–í–ê–ù–ù–Ø –°–¢–û–†–Ü–ù–ö–ò ---
st.set_page_config(
    page_title="Cesta Python M√°ga",
    page_icon="üßô‚Äç‚ôÇÔ∏è",
    layout="wide"
)

# --- –°–¢–ò–õ–Ü–ó–ê–¶–Ü–Ø (CSS) ---
st.markdown("""
<style>
    .stTextInput > div > div > input {
        border: 2px solid #4B0082; /* –Ü–Ω–¥–∏–≥–æ */
        border-radius: 5px;
    }
    .stTextArea > div > div > textarea {
        border: 2px solid #4B0082;
        border-radius: 5px;
    }
    .stButton > button {
        background-color: #9370DB; /* –°–µ—Ä–µ–¥–Ω—ñ–π —Ñ—ñ–æ–ª–µ—Ç–æ–≤–∏–π */
        color: white;
        border-radius: 10px;
        border: 2px solid #4B0082;
    }
    .stButton > button:hover {
        background-color: #4B0082;
        border-color: #9370DB;
    }
</style>
""", unsafe_allow_html=True)


# --- –Ü–ù–Ü–¶–Ü–ê–õ–Ü–ó–ê–¶–Ü–Ø –°–¢–ê–ù–£ –ì–†–ò ---
if 'level' not in st.session_state:
    st.session_state.level = 0
if 'score' not in st.session_state:
    st.session_state.score = 0
if 'player_name' not in st.session_state:
    st.session_state.player_name = ""
if 'error_message' not in st.session_state:
    st.session_state.error_message = ""

# --- –§–£–ù–ö–¶–Ü–á –î–õ–Ø –†–Ü–í–ù–Ü–í ---

def display_level_0():
    """–í—Å—Ç—É–ø–Ω–∏–π –µ–∫—Ä–∞–Ω –≥—Ä–∏"""
    st.title("üßô‚Äç‚ôÇÔ∏è V√≠tej na Cestƒõ Python M√°ga! üìú")
    st.image("static/wizard.png", width=200)
    
    st.markdown("### Tv√° zkou≈°ka zaƒç√≠n√°, mlad√Ω uƒçedn√≠ku!")
    st.markdown(
        "Jsi v prastar√© Akademii K√≥du. Aby ses stal prav√Ωm Python M√°gem, "
        "mus√≠≈° proj√≠t pƒõti zaƒçarovan√Ωmi komnatami. V ka≈æd√© z nich mus√≠≈° seslat "
        "spr√°vn√© kouzlo (napsat spr√°vn√Ω k√≥d), abys otev≈ôel dve≈ôe d√°l."
    )
    
    player_name = st.text_input("Jak ti m√°me ≈ô√≠kat, budouc√≠ m√°gu?", key="player_name_input")
    
    if st.button("Zaƒç√≠t dobrodru≈æstv√≠!"):
        if player_name:
            st.session_state.player_name = player_name
            st.session_state.level = 1
            st.rerun()
        else:
            st.warning("Mus√≠≈° zadat sv√© jm√©no, aby kronik√°≈ôi vƒõdƒõli, o kom ps√°t!")

def display_level_1():
    """–†—ñ–≤–µ–Ω—å 1: –ó–º—ñ–Ω–Ω—ñ —Ç–∞ print()"""
    st.header("√örove≈à 1: Komnata ozvƒõn üó£Ô∏è")
    st.markdown(
        "Prvn√≠ komnata testuje tvou schopnost **p≈ôedstavit se**. "
        "Str√°≈æce komnaty se tƒõ pt√° na tv√© jm√©no. "
        "Vytvo≈ô promƒõnnou `jmeno` a ulo≈æ do n√≠ sv√© jm√©no v uvozovk√°ch. "
        "Pot√© ho vypi≈° pomoc√≠ funkce `print()`."
    )
    st.info("üí° **Tip:** Jm√©na (≈ôetƒõzce) se v Pythonu p√≠≈°√≠ do uvozovek, nap≈ô. `\"Albus\"`.")

    user_code = st.text_area("Napi≈° sv√© kouzlo zde:", height=100, key="level1_code")
    
    if st.button("Seslat kouzlo ‚ú®"):
        correct_part1 = f"jmeno=\"{st.session_state.player_name}\""
        correct_part2 = "print(jmeno)"
        
        if correct_part1.replace(" ", "") in user_code.replace(" ", "") and \
           correct_part2.replace(" ", "") in user_code.replace(" ", ""):
            st.success(f"V√Ωbornƒõ, {st.session_state.player_name}! Dve≈ôe se otev√≠raj√≠!")
            st.balloons()
            st.session_state.score += 10
            st.session_state.level = 2
            time.sleep(2)
            st.rerun()
        else:
            st.error("Str√°≈æce ti nerozum√≠. Zkontroluj, zda jsi spr√°vnƒõ vytvo≈ôil promƒõnnou `jmeno` a pou≈æil funkci `print()`.")

def display_level_2():
    """–†—ñ–≤–µ–Ω—å 2: –ê—Ä–∏—Ñ–º–µ—Ç–∏–∫–∞"""
    st.header("√örove≈à 2: S√≠≈à ƒç√≠seln√Ωch lektvar≈Ø üß™")
    st.markdown(
        "K odemƒçen√≠ dal≈°√≠ch dve≈ô√≠ mus√≠≈° nam√≠chat **lektvar s√≠ly**. "
        "Recept zn√≠: *'Vezmi 5 kapek draƒç√≠ krve a p≈ôidej 3 gramy prachu z jednoro≈æcova rohu. Cel√© to pak ztrojn√°sob.'*"
        "\n\nNapi≈° k√≥d, kter√Ω vypoƒç√≠t√° v√Ωsledek a ulo≈æ√≠ ho do promƒõnn√© `vysledek`."
    )
    st.info("üí° **Tip:** Python pou≈æ√≠v√° `+`, `-`, `*` (n√°soben√≠), `/` (dƒõlen√≠) a z√°vorky `()` pro urƒçen√≠ po≈ôad√≠ operac√≠.")
    
    user_code = st.text_area("Napi≈° sv√© kouzlo zde:", height=100, key="level2_code")
    
    if st.button("Nam√≠chat lektvar üß™"):
        if "vysledek" in user_code and "5" in user_code and "3" in user_code and "*" in user_code and "+" in user_code:
            try:
                loc = {}
                exec(user_code, {}, loc)
                if loc.get('vysledek') == 24:
                    st.success("C√≠t√≠≈°, jak ti v ≈æil√°ch proud√≠ s√≠la! Lektvar funguje! Postupuje≈° d√°l.")
                    st.balloons()
                    st.session_state.score += 20
                    st.session_state.level = 3
                    time.sleep(2)
                    st.rerun()
                else:
                    st.error("Lektvar m√° divnou barvu. V√Ωsledek nen√≠ spr√°vn√Ω. Zkontroluj v√Ωpoƒçet!")
            except Exception as e:
                st.error(f"Kouzlo selhalo s chybou: {e}. Zkus to znovu.")
        else:
            st.error("Zd√° se, ≈æe ti chyb√≠ nƒõjak√° ingredience nebo operace. Peƒçlivƒõ si p≈ôeƒçti recept!")

def display_level_3():
    """–†—ñ–≤–µ–Ω—å 3: –£–º–æ–≤–∏ if/else"""
    st.header("√örove≈à 3: Knihovna rozhodnut√≠ üìö")
    st.markdown(
        "P≈ôed tebou stoj√≠ mluv√≠c√≠ socha. ≈ò√≠k√°: *'Vyslov jedno ze dvou magick√Ωch slov: **svƒõtlo** nebo **tma**. Jen jedno tƒõ pust√≠ d√°l.'*"
        "\n\nTv√Ωm √∫kolem je napsat k√≥d, kter√Ω se **rozhodne**. Vytvo≈ô promƒõnnou `volba` s hodnotou `'svƒõtlo'`. "
        "Pot√© napi≈° podm√≠nku `if`, kter√° zkontroluje, jestli se `volba` rovn√° `'svƒõtlo'`. Pokud ano, vypi≈° `'Dve≈ôe se otev√≠raj√≠'`, jinak ( `else` ) vypi≈° `'Socha mlƒç√≠'`."
    )
    
    st.info("üí° **Tip:** Zde je p≈ô√≠klad, jak funguje podm√≠nka `if/else` pro kontrolu vƒõku. Zkus pou≈æ√≠t stejnou logiku pro svou √∫lohu!")
    st.code(
        "vek = 20\n"
        "if vek >= 18:\n"
        "    print('Vstup povolen')\n"
        "else:\n"
        "    print('Vstup odep≈ôen')", 
        language='python'
    )
    
    user_code = st.text_area("Napi≈° sv√© rozhodovac√≠ kouzlo:", height=150, key="level3_code")
    
    if st.button("Vyslovit slovo üó£Ô∏è"):
        normalized_code = user_code.replace(" ", "")
        
        if "volba='svƒõtlo'" in normalized_code and \
           "ifvolba=='svƒõtlo':" in normalized_code and \
           "else:" in normalized_code and \
           "print(" in normalized_code:
            st.success("Spr√°vn√° volba! Socha ustupuje a odhaluje tajn√Ω pr≈Øchod.")
            st.balloons()
            st.session_state.score += 30
            st.session_state.level = 4
            time.sleep(2)
            st.rerun()
        else:
            st.error("Socha nereaguje. Ujisti se, ≈æe tv≈Øj k√≥d m√° spr√°vnou strukturu `if/else` a porovn√°v√° spr√°vnou hodnotu.")
            
def display_level_4():
    """–†—ñ–≤–µ–Ω—å 4: –¶–∏–∫–ª–∏ for"""
    st.header("√örove≈à 4: Zahrada opakov√°n√≠ üå≥")
    st.markdown(
        "K p≈ô√≠pravƒõ dal≈°√≠ho kouzla pot≈ôebuje≈° sesb√≠rat t≈ôi ingredience ze Zahrady opakov√°n√≠: **'ko≈ôen mandragory'**, **'had√≠ k≈Ø≈æe'** a **'draƒç√≠ ≈°upina'**. "
        "M√≠sto psan√≠ t≈ô√≠ p≈ô√≠kaz≈Ø pro ka≈ædou ingredienci pou≈æij **cyklus `for`**, kter√Ω projde seznam ingredienc√≠ a vyp√≠≈°e je."
        "\n\n1. Vytvo≈ô seznam `ingredience = [...]`."
        "\n2. Pou≈æij cyklus `for`, kter√Ω pro ka≈ædou polo≈æku v seznamu vyp√≠≈°e: `Sb√≠r√°m: [n√°zev ingredience]`."
    )
    st.info("üí° **Tip:** Cyklus `for` opakuje k√≥d pro ka≈æd√Ω prvek v seznamu. P≈ô√≠klad: `for i in muj_seznam: ...`")
    
    user_code = st.text_area("Napi≈° sv√© sbƒõrac√≠ kouzlo:", height=200, key="level4_code")
    
    if st.button("Zaƒç√≠t sb√≠rat üåø"):
        is_correct = "for" in user_code and \
                     "in ingredience" in user_code and \
                     "print" in user_code and \
                     "ko≈ôen mandragory" in user_code and \
                     "had√≠ k≈Ø≈æe" in user_code and \
                     "draƒç√≠ ≈°upina" in user_code
        
        if is_correct:
            st.success("V≈°echny ingredience jsou v tv√©m v√°ƒçku! Cesta je voln√°.")
            st.balloons()
            st.session_state.score += 40
            st.session_state.level = 5
            time.sleep(2)
            st.rerun()
        else:
            st.error("Nƒõco ti chyb√≠. Pou≈æil jsi cyklus `for` a spr√°vnƒõ vytvo≈ôil seznam `ingredience`?")
            
def display_level_5():
    """–†—ñ–≤–µ–Ω—å 5: –§—É–Ω–∫—Ü—ñ—ó"""
    st.header("√örove≈à 5: Svatynƒõ mistr≈Ø üèõÔ∏è")
    st.markdown(
        "Jsi u posledn√≠ch dve≈ô√≠. Jsou zapeƒçetƒõny mocnou magi√≠. Aby sis je otev≈ôel, mus√≠≈° vytvo≈ôit sv√© vlastn√≠, znovupou≈æiteln√© kouzlo - **funkci**."
        "\n\nVytvo≈ô funkci jm√©nem `otevri_dvere`, kter√° p≈ôij√≠m√° jeden argument `heslo`. "
        "Uvnit≈ô funkce zkontroluj, jestli je `heslo` rovno `'SEZAME, OTEV≈òI SE!'`. Pokud ano, funkce by mƒõla vr√°tit (pomoc√≠ `return`) text `'Dve≈ôe se s rachotem otev√≠raj√≠!'`. Jinak by mƒõla vr√°tit `'Ticho...'`."
        "\n\nPot√© svou funkci zavolej se spr√°vn√Ωm heslem."
    )
    st.info("üí° **Tip:** Funkce se definuje pomoc√≠ `def nazev_funkce(argument):`. Hodnota se vrac√≠ pomoc√≠ `return`.")

    user_code = st.text_area("Napi≈° sv√© mistrovsk√© kouzlo:", height=250, key="level5_code")
    
    if st.button("Vyslovit mistrovsk√© zakl√≠nadlo ü™Ñ"):
        # --- –í–ò–ü–†–ê–í–õ–ï–ù–ê –ß–ê–°–¢–ò–ù–ê ---
        # –¢–µ–ø–µ—Ä –º–∏ —à—É–∫–∞—î–º–æ —à–∞–±–ª–æ–Ω–∏ –±–µ–∑ –ø—Ä–æ–±—ñ–ª—ñ–≤ —É –∫–æ–¥—ñ, –∑ —è–∫–æ–≥–æ —Ç–µ–∂ –≤–∏–¥–∞–ª–µ–Ω—ñ –ø—Ä–æ–±—ñ–ª–∏.
        normalized_code = user_code.replace(" ", "")
        
        is_defined = "defotevri_dvere(heslo):" in normalized_code
        has_return = "return" in normalized_code
        has_if = "ifheslo==" in normalized_code
        is_called = "otevri_dvere(" in user_code # –¢—É—Ç –ø—Ä–æ–±—ñ–ª –Ω–µ –≤–∞–∂–ª–∏–≤–∏–π, –±–æ –º–∏ –Ω–µ –≤–∏–¥–∞–ª—è—î–º–æ –π–æ–≥–æ –∑ –∫–æ–¥—É
        
        if is_defined and has_return and has_if and is_called:
            st.success("Sly≈°√≠≈° sk≈ô√≠pƒõn√≠ kamene... Dve≈ôe se otev√≠raj√≠ a za nimi vid√≠≈° s√°l pln√Ω svƒõtla. Dok√°zal jsi to!")
            st.balloons()
            st.session_state.score += 50
            st.session_state.level = 6
            time.sleep(2)
            st.rerun()
        else:
            st.error("Peƒçe≈• je p≈ô√≠li≈° siln√°. Zkontroluj definici funkce (`def`), podm√≠nku (`if`), pou≈æit√≠ `return` a jej√≠ zavol√°n√≠.")

def display_final_screen():
    """–§—ñ–Ω–∞–ª—å–Ω–∏–π –µ–∫—Ä–∞–Ω"""
    st.title(f"üéâ Gratuluji, M√°gule {st.session_state.player_name}! üéâ")
    st.balloons()
    st.markdown(f"## Dos√°hl jsi celkov√©ho sk√≥re: **{st.session_state.score} bod≈Ø!**")
    st.markdown(
        "Pro≈°el jsi v≈°emi zkou≈°kami a dok√°zal, ≈æe jsi hoden titulu Python M√°g. "
        "Tv√° cesta teprve zaƒç√≠n√°, ale z√°klady m√°≈° pevn√© jako sk√°la. Pokraƒçuj v uƒçen√≠ a sta≈à se nejmocnƒõj≈°√≠m kod√©rem v zemi!"
    )
    st.image("static/wizard.png", width=300, caption="Mistr M√°g Pythonu")
    
    if st.button("Hr√°t znovu?"):
        # –°–∫–∏–¥–∞—î–º–æ —Å—Ç–∞–Ω –≥—Ä–∏, –∞–ª–µ –∑–±–µ—Ä—ñ–≥–∞—î–º–æ —ñ–º'—è –≥—Ä–∞–≤—Ü—è –¥–ª—è –∑—Ä—É—á–Ω–æ—Å—Ç—ñ
        st.session_state.level = 1
        st.session_state.score = 0
        st.rerun()

# --- –ì–û–õ–û–í–ù–ê –õ–û–ì–Ü–ö–ê –ì–†–ò ---
st.sidebar.title("üêç Panel M√°ga")
if st.session_state.player_name:
    st.sidebar.write(f"**Uƒçedn√≠k:** {st.session_state.player_name}")
    st.sidebar.write(f"**√örove≈à:** {st.session_state.level if st.session_state.level <= 5 else 5} / 5")
    st.sidebar.write(f"**Sk√≥re:** {st.session_state.score} bod≈Ø")
    st.sidebar.progress(st.session_state.level / 5 if st.session_state.level <= 5 else 1.0)
else:
    st.sidebar.write("ƒåek√°m na nov√©ho uƒçedn√≠ka...")

# –†–æ—É—Ç–µ—Ä, —è–∫–∏–π –≤—ñ–¥–æ–±—Ä–∞–∂–∞—î –ø—Ä–∞–≤–∏–ª—å–Ω–∏–π —Ä—ñ–≤–µ–Ω—å –≤ –∑–∞–ª–µ–∂–Ω–æ—Å—Ç—ñ –≤—ñ–¥ —Å—Ç–∞–Ω—É –≥—Ä–∏
if st.session_state.level == 0:
    display_level_0()
elif st.session_state.level == 1:
    display_level_1()
elif st.session_state.level == 2:
    display_level_2()
elif st.session_state.level == 3:
    display_level_3()
elif st.session_state.level == 4:
    display_level_4()
elif st.session_state.level == 5:
    display_level_5()
elif st.session_state.level == 6:
    display_final_screen()
