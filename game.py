# game.py (–í–ï–†–°–Ü–Ø 12.0 - –§–Ü–ù–ê–õ–¨–ù–ê –ß–ò–¢–ê–ë–ï–õ–¨–ù–Ü–°–¢–¨)

import streamlit as st
import time

# --- –ù–ê–õ–ê–®–¢–£–í–ê–ù–ù–Ø –°–¢–û–†–Ü–ù–ö–ò ---
st.set_page_config(
    page_title="Cesta Python M√°ga",
    page_icon="üßô‚Äç‚ôÇÔ∏è",
    layout="wide"
)

# --- –§–Ü–ù–ê–õ–¨–ù–ò–ô –ë–õ–û–ö –°–¢–ò–õ–Ü–í –î–õ–Ø –Ü–î–ï–ê–õ–¨–ù–û–á –ß–ò–¢–ê–ë–ï–õ–¨–ù–û–°–¢–Ü ---

# !!! –í–ê–ñ–õ–ò–í–û: –ü–ï–†–ï–í–Ü–†, –©–û –¢–£–¢ –¢–í–û–Ñ –ü–†–ê–í–ò–õ–¨–ù–ï –ü–†–Ø–ú–ï –ü–û–°–ò–õ–ê–ù–ù–Ø –ó GITHUB !!!
image_url = "https://raw.githubusercontent.com/viktorka777/python-mage-game/refs/heads/main/static/background.png"

page_bg_style = f"""
<style>
/* --- –ì–û–õ–û–í–ù–ò–ô –§–û–ù --- */
.stApp {{
    background-image: url("{image_url}");
    background-size: cover;
    background-position: center;
    background-repeat: no-repeat;
    background-attachment: fixed;
}}

/* --- –û–°–ù–û–í–ù–ò–ô –¢–ï–ö–°–¢ (–ó–ê–ì–û–õ–û–í–ö–ò, –ü–ò–¢–ê–ù–ù–Ø) --- */
.stApp .stMarkdown, .stApp .stHeader, .stApp .stTitle, .stApp label {{
    color: #FFFFFF !important;
    text-shadow: 1px 1px 3px #000000;
}}

/* --- –ü–û–õ–Ø –î–õ–Ø –í–í–û–î–£ --- */
.stTextInput > div > div > input,
.stTextArea > div > div > textarea {{
    background-color: rgba(0, 0, 0, 0.4);
    color: #FFFFFF;
    border: 2px solid #9370DB;
    border-radius: 5px;
}}

/* --- –ö–ù–û–ü–ö–ò --- */
.stButton > button {{
    background-color: #9370DB;
    color: white;
    border-radius: 10px;
    border: 2px solid #4B0082;
}}
.stButton > button:hover {{
    background-color: #4B0082;
    border-color: #9370DB;
}}

/* --- –ü–Ü–î–ö–ê–ó–ö–ò (st.info, st.success, —ñ —Ç.–¥.) --- */
[data-testid="stAlert"] {{
    border-radius: 10px;
    border: 1px solid rgba(255, 255, 255, 0.3);
    background-color: rgba(0, 0, 0, 0.2);
}}
[data-testid="stAlert"] p {{
    color: white !important;
    text-shadow: none;
}}

/* --- –í–ï–õ–ò–ö–Ü –ë–õ–û–ö–ò –ö–û–î–£ --- */
[data-testid="stCodeBlock"] {{
    background-color: rgba(0, 0, 0, 0.5) !important;
    border-radius: 10px;
}}

/* --- –ë–Ü–ß–ù–ê –ü–ê–ù–ï–õ–¨ --- */
[data-testid="stSidebar"] {{
    background-color: rgba(0, 0, 0, 0.5);
}}
[data-testid="stSidebar"] .stMarkdown, [data-testid="stSidebar"] .stTitle {{
     color: #FFFFFF !important;
}}

/* --- –ù–û–í–ï –í–ò–ü–†–ê–í–õ–ï–ù–ù–Ø: –ú–∞–ª–µ–Ω—å–∫—ñ –≤–±—É–¥–æ–≤–∞–Ω—ñ –±–ª–æ–∫–∏ –∫–æ–¥—É –≤ —Ç–µ–∫—Å—Ç—ñ --- */
.stMarkdown code {{
    background-color: rgba(255, 255, 255, 0.2) !important; /* –°–≤—ñ—Ç–ª–∏–π –Ω–∞–ø—ñ–≤–ø—Ä–æ–∑–æ—Ä–∏–π —Ñ–æ–Ω */
    color: #f0f2f6 !important; /* –Ø—Å–∫—Ä–∞–≤–∏–π —Å–≤—ñ—Ç–ª–æ-—Å—ñ—Ä–∏–π —Ç–µ–∫—Å—Ç */
    padding: 0.1em 0.3em;
    border-radius: 5px;
}}
</style>
"""
st.markdown(page_bg_style, unsafe_allow_html=True)


# --- –Ü–ù–Ü–¶–Ü–ê–õ–Ü–ó–ê–¶–Ü–Ø –°–¢–ê–ù–£ –ì–†–ò (—Å—Ç–∞–±—ñ–ª—å–Ω–∞ –≤–µ—Ä—Å—ñ—è) ---
if 'level' not in st.session_state:
    st.session_state.level = 0
if 'score' not in st.session_state:
    st.session_state.score = 0
if 'player_name' not in st.session_state:
    st.session_state.player_name = ""
if 'error_message' not in st.session_state:
    st.session_state.error_message = ""

# --- –§–£–ù–ö–¶–Ü–á –†–Ü–í–ù–Ü–í (–±–µ–∑ –∑–º—ñ–Ω, —Å—Ç–∞–±—ñ–ª—å–Ω–∞ –ª–æ–≥—ñ–∫–∞) ---
def display_level_0():
    st.title("üßô‚Äç‚ôÇÔ∏è V√≠tej na Cestƒõ Python M√°ga! üìú")
    st.image("static/wizard.png", width=200)
    st.markdown("### Tv√° zkou≈°ka zaƒç√≠n√°, mlad√Ω uƒçedn√≠ku!")
    st.markdown(
        "Jsi v prastar√© Akademii K√≥du. Aby ses stal prav√Ωm Python M√°gem, "
        "mus√≠≈° proj√≠t pƒõti zaƒçarovan√Ωmi komnatami. V ka≈æd√© z nich mus√≠≈° seslat "
        "spr√°vn√© kouzlo (napsat spr√°vn√Ω k√≥d), abys otev≈ôel dve≈ôe d√°l."
    )
    player_name = st.text_input("Jak ti m√°me ≈ô√≠kat, budouc√≠ m√°gu?", key="player_name_input")
    if st.button("Zaƒç√≠t dobrodru≈æstv√≠!"):
        if player_name:
            st.session_state.player_name = player_name
            st.session_state.level = 1
            st.rerun()
        else:
            st.warning("Mus√≠≈° zadat sv√© jm√©no, aby kronik√°≈ôi vƒõdƒõli, o kom ps√°t!")

def display_level_1():
    st.header("√örove≈à 1: Komnata ozvƒõn üó£Ô∏è")
    st.markdown(
        "Prvn√≠ komnata testuje tvou schopnost **p≈ôedstavit se**. Str√°≈æce komnaty se tƒõ pt√° na tv√© jm√©no. Vytvo≈ô promƒõnnou `jmeno` a ulo≈æ do n√≠ sv√© jm√©no v uvozovk√°ch. Pot√© ho vypi≈° pomoc√≠ funkce `print()`."
    )
    st.info("üí° **Tip:** Jm√©na (≈ôetƒõzce) se v Pythonu p√≠≈°√≠ do uvozovek, nap≈ô. `\"Albus\"`.")
    user_code = st.text_area("Napi≈° sv√© kouzlo zde:", height=100, key="level1_code")
    if st.button("Seslat kouzlo ‚ú®"):
        correct_part1 = f"jmeno=\"{st.session_state.player_name}\""
        correct_part2 = "print(jmeno)"
        if correct_part1.replace(" ", "") in user_code.replace(" ", "") and \
           correct_part2.replace(" ", "") in user_code.replace(" ", ""):
            st.success(f"V√Ωbornƒõ, {st.session_state.player_name}! Dve≈ôe se otev√≠raj√≠!")
            st.balloons()
            st.session_state.score += 10
            st.session_state.level = 2
            time.sleep(2)
            st.rerun()
        else:
            st.error("Str√°≈æce ti nerozum√≠. Zkontroluj, zda jsi spr√°vnƒõ vytvo≈ôil promƒõnnou `jmeno` a pou≈æil funkci `print()`.")

def display_level_2():
    st.header("√örove≈à 2: S√≠≈à ƒç√≠seln√Ωch lektvar≈Ø üß™")
    st.markdown(
        "K odemƒçen√≠ dal≈°√≠ch dve≈ô√≠ mus√≠≈° nam√≠chat **lektvar s√≠ly**. "
        "Recept zn√≠: *'Vezmi 5 kapek draƒç√≠ krve a p≈ôidej 3 gramy prachu z jednoro≈æcova rohu. Cel√© to pak ztrojn√°sob.'*"
    )
    st.info("üí° **Tip:** Python pou≈æ√≠v√° `+`, `-`, `*`, `/` a `()`.")
    user_code = st.text_area("Napi≈° sv√© kouzlo zde:", height=100, key="level2_code")
    if st.button("Nam√≠chat lektvar üß™"):
        if "vysledek" in user_code and "5" in user_code and "3" in user_code and "*" in user_code and "+" in user_code:
            try:
                loc = {}
                exec(user_code, {}, loc)
                if loc.get('vysledek') == 24:
                    st.success("C√≠t√≠≈°, jak ti v ≈æil√°ch proud√≠ s√≠la! Postupuje≈° d√°l.")
                    st.balloons()
                    st.session_state.score += 20
                    st.session_state.level = 3
                    time.sleep(2)
                    st.rerun()
                else:
                    st.error("Lektvar m√° divnou barvu. Zkontroluj v√Ωpoƒçet!")
            except Exception as e:
                st.error(f"Kouzlo selhalo s chybou: {e}.")
        else:
            st.error("Zd√° se, ≈æe ti chyb√≠ nƒõjak√° ingredience nebo operace.")

def display_level_3():
    st.header("√örove≈à 3: Knihovna rozhodnut√≠ üìö")
    st.markdown(
        "P≈ôed tebou stoj√≠ mluv√≠c√≠ socha. ≈ò√≠k√°: *'Vyslov jedno ze dvou magick√Ωch slov: **svƒõtlo** nebo **tma**. Jen jedno tƒõ pust√≠ d√°l.'*"
    )
    st.info("üí° **Tip:** Zde je p≈ô√≠klad `if/else`... `if vek >= 18: ...`")
    st.code("vek = 20\nif vek >= 18:\n    print('Vstup povolen')\nelse:\n    print('Vstup odep≈ôen')", language='python')
    user_code = st.text_area("Napi≈° sv√© rozhodovac√≠ kouzlo:", height=150, key="level3_code")
    if st.button("Vyslovit slovo üó£Ô∏è"):
        normalized_code = user_code.replace(" ", "")
        has_variable = "volba='svƒõtlo'" in normalized_code or 'volba="svƒõtlo"' in normalized_code
        has_condition = "ifvolba=='svƒõtlo':" in normalized_code or 'ifvolba=="svƒõtlo":' in normalized_code
        has_else = "else:" in normalized_code
        has_print = "print(" in normalized_code
        if has_variable and has_condition and has_else and has_print:
            st.success("Spr√°vn√° volba! Socha ustupuje.")
            st.balloons()
            st.session_state.score += 30
            st.session_state.level = 4
            time.sleep(2)
            st.rerun()
        else:
            st.error("Socha nereaguje. Zkontroluj strukturu `if/else`.")

def display_level_4():
    st.header("√örove≈à 4: Zahrada opakov√°n√≠ üå≥")
    st.markdown("K p≈ô√≠pravƒõ dal≈°√≠ho kouzla pot≈ôebuje≈° sesb√≠rat t≈ôi ingredience...")
    st.info("üí° **Tip:** Cyklus `for` opakuje k√≥d pro ka≈æd√Ω prvek v seznamu...")
    user_code = st.text_area("Napi≈° sv√© sbƒõrac√≠ kouzlo:", height=200, key="level4_code")
    if st.button("Zaƒç√≠t sb√≠rat üåø"):
        is_correct = "for" in user_code and "in ingredience" in user_code and "print" in user_code and "ko≈ôen mandragory" in user_code and "had√≠ k≈Ø≈æe" in user_code and "draƒç√≠ ≈°upina" in user_code
        if is_correct:
            st.success("V≈°echny ingredience jsou v tv√©m v√°ƒçku!")
            st.balloons()
            st.session_state.score += 40
            st.session_state.level = 5
            time.sleep(2)
            st.rerun()
        else:
            st.error("Nƒõco ti chyb√≠. Pou≈æil jsi `for` a seznam `ingredience`?")

def display_level_5():
    st.header("√örove≈à 5: Svatynƒõ mistr≈Ø üèõÔ∏è")
    st.markdown("Vytvo≈ô funkci jm√©nem `otevri_dvere`, kter√° p≈ôij√≠m√° `heslo`...")
    st.info("üí° **Tip:** Funkce se definuje pomoc√≠ `def nazev_funkce(argument):`...")
    user_code = st.text_area("Napi≈° sv√© mistrovsk√© kouzlo:", height=250, key="level5_code")
    if st.button("Vyslovit mistrovsk√© zakl√≠nadlo ü™Ñ"):
        normalized_code = user_code.replace(" ", "")
        is_defined = "defotevri_dvere(heslo):" in normalized_code
        has_return = "return" in normalized_code
        has_if = "ifheslo==" in normalized_code
        is_called = "otevri_dvere(" in user_code
        if is_defined and has_return and has_if and is_called:
            st.success("Sly≈°√≠≈° sk≈ô√≠pƒõn√≠ kamene... Dok√°zal jsi to!")
            st.balloons()
            st.session_state.score += 50
            st.session_state.level = 6
            time.sleep(2)
            st.rerun()
        else:
            st.error("Peƒçe≈• je p≈ô√≠li≈° siln√°. Zkontroluj definici `def` a —ó—ó zavol√°n√≠.")

def display_final_screen():
    st.title(f"üéâ Gratuluji, M√°gule {st.session_state.player_name}! üéâ")
    st.balloons()
    st.markdown(f"## Dos√°hl jsi celkov√©ho sk√≥re: **{st.session_state.score} bod≈Ø!**")
    st.markdown("Pro≈°el jsi v≈°emi zkou≈°kami...")
    st.image("static/wizard.png", width=300, caption="Mistr M√°g Pythonu")
    if st.button("Hr√°t znovu?"):
        st.session_state.level = 1
        st.session_state.score = 0
        st.rerun()

# --- –ì–û–õ–û–í–ù–ê –õ–û–ì–Ü–ö–ê –ì–†–ò ---
st.sidebar.title("üêç Panel M√°ga")
if st.session_state.player_name:
    st.sidebar.write(f"**Uƒçedn√≠k:** {st.session_state.player_name}")
    st.sidebar.write(f"**√örove≈à:** {st.session_state.level if st.session_state.level <= 5 else 5} / 5")
    st.sidebar.write(f"**Sk√≥re:** {st.session_state.score} bod≈Ø")
    st.sidebar.progress(st.session_state.level / 5 if st.session_state.level <= 5 else 1.0)
else:
    st.sidebar.write("ƒåek√°m na nov√©ho uƒçedn√≠ka...")

# –†–æ—É—Ç–µ—Ä
if st.session_state.level == 0:
    display_level_0()
elif st.session_state.level == 1:
    display_level_1()
elif st.session_state.level == 2:
    display_level_2()
elif st.session_state.level == 3:
    display_level_3()
elif st.session_state.level == 4:
    display_level_4()
elif st.session_state.level == 5:
    display_level_5()
elif st.session_state.level == 6:
    display_final_screen()
